enum Role {
  ADMIN
  USER
}

type User {
  id: ID!
  username: String!
  email: String!
}

type UserWithToken {
  user: User!
  token: String!
}

input UserInput {
  username: String! @binding(constraint: "required,max=20")
  email: String!
  password: String! @binding(constraint: "required,min=8")
}

input LoginInput {
  email: String!
  password: String!
}

extend type Query {
  user(userId: String!): User! @hasRoles(roles: [ADMIN]) @isAuth
  self: User! @isAuth
  users: [User!] @hasRoles(roles: [ADMIN]) @isAuth
}

extend type Mutation {
  createUser(input: UserInput): User! @hasRoles(roles: [ADMIN]) @isAuth
  login(input: LoginInput!): UserWithToken
}
